pipeline {
    agent any
  
      tools {
        jfrog 'jfrog-cli'
      }

    stages {
        stage('snyk scan') {
            steps {
                snykSecurity(
                    snykInstallation: 'snyk@latest',
                    snykTokenId: 'snyk_api_token',
                    monitorProjectOnBuild: false,
                    failOnIssues: false,  // Use boolean for failOnIssues
                    additionalArguments: '--json-file-output=all-vulnerabilities.json'
                )
            }
        }

        stage('maven build artifact') {
            steps {

                jf 'mvn-config --repo-resolve-releases libs-release --repo-resolve-snapshots libs-snapshots --repo-deploy-releases libs-release-local --repo-deploy-snapshots libs-snapshot-local'
                jf  'mvn clean package -DskipTests=true -Dcheckstyle.skip -fn'  // Correct capitalization for -DskipTests
            }
        }

        





       stage('TRIVY FS SCAN') {
            steps {
                sh "trivy fs . > trivyfs.txt"
            }
        }

        stage('building a docker image') {
            steps {
                sh "docker build -t deepak8934/petapp:${BUILD_NUMBER} ."
            }
        }

       stage("TRIVY"){
            steps{
                sh "trivy image  deepak8934/petapp:${BUILD_NUMBER} --scanners vuln > trivyimage.txt" 
            }
        }

        stage('docker image push') {
            steps {
                withDockerRegistry(credentialsId: 'dockercred', url: '') {
                    sh "docker push deepak8934/petapp:${BUILD_NUMBER}"
                }
            }
        }


        stage('Publish build info') {
            steps {
                jf 'rt build-publish'
            }
        }

       stage('push artifact') {
            steps {
               jf ' rt u /var/lib/jenkins/workspace/pipeline_part2/target/spring-petclinic-3.2.0-SNAPSHOT.jar  libs-snapshot-local/com/example/springpetclinic/3.2.0-SNAPSHOT/spring-petclinic-3.2.0-SNAPSHOT.jar '

            }
        }


     



        
    }
}
